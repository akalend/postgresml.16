#!/usr/bin/env python

import os,sys,time,psutil
import daemon
from model import Model

LOG = '/tmp/ml2.log'

def run(numder,ip):
	model = Model(ip)
	res = model.getQuery(numder)
	if res :
		model.getData()
		model.process()
	else:
		print('query is null num={}'.format(numder))


def log(text):
	with open(LOG, 'a') as f:
		f.write(text)
		# sys.stderr = f

def sleep():
	while(1):
		time.sleep(1)

"""
Return status of process
"""
def show():

	found = False

	print("pid\t   args\t   status")
	print("---------------------------")
	for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
		if proc.name() == 'python' and proc.cmdline()[1][-6:] == 'mlexec':
			# print(proc.info)
			if proc.info['pid'] == os.getpid():
				continue				
			found = True
			print("%s\t| %s\t| %s"%(proc.info['pid'], proc.info['cmdline'][2], proc.status()))
		
	if not found:
		print("Process ml not found")


def start( numder,ip):
	pwd = os.getenv('PWD')
	print('start Daemon')
	with daemon.DaemonContext(
			detach_process=True,
			working_directory=pwd):
		# sleep()
		run(numder,ip)


if __name__ == "__main__":
	arg =  sys.argv[1] if len(sys.argv) > 1 else None
	if arg:
		if arg == 'show':
			show()
		elif arg == 'run':
			arg  =  sys.argv[2] if len(sys.argv) > 3 else None
			arg2 =  sys.argv[3] if len(sys.argv) > 3 else None

			if arg is None:
				print('error input format')
			else:
				run(arg,arg2)
		else:
			if len(sys.argv) < 2:
				print('error input format')
			else:	
				arg2 =  sys.argv[2] if len(sys.argv) > 2 else None
				start(arg,arg2)

	else:
		print("please input argument")



